<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. -->
<project basedir="." default="build" name="EbrithilAPI" xmlns:ivy="antlib:org.apache.ivy.ant" xmlns:ac="antlib:net.sf.antcontrib">
    <property environment="env"/>
    <property name="ECLIPSE_HOME" value="../../../../../Tools/eclipse/"/>
    <property name="junit.output.dir" value="junit"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.8"/>
    <property name="source" value="1.8"/>
    <path id="Ivy.libraryclasspath">
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/io.restx/restx-jongo/jars/restx-jongo-0.34.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/io.restx/restx-factory/jars/restx-factory-0.34.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/io.restx/restx-common/jars/restx-common-0.34.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/com.google.guava/guava/bundles/guava-17.0.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/joda-time/joda-time/jars/joda-time-2.3.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/org.reflections/reflections/jars/reflections-0.9.9-RC1.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/org.javassist/javassist/jars/javassist-3.16.1-GA.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/dom4j/dom4j/jars/dom4j-1.6.1.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/xml-apis/xml-apis/jars/xml-apis-1.0.b2.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/com.samskivert/jmustache/bundles/jmustache-1.8.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/javax.inject/javax.inject/jars/javax.inject-1.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/io.restx/restx-core/jars/restx-core-0.34.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/com.fasterxml.jackson.datatype/jackson-datatype-joda/bundles/jackson-datatype-joda-2.3.3.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/com.fasterxml.jackson.datatype/jackson-datatype-guava/bundles/jackson-datatype-guava-2.3.3.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/io.restx/restx-classloader/jars/restx-classloader-0.34.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/io.restx/restx-apidocs-doclet/jars/restx-apidocs-doclet-0.34.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/javax.validation/validation-api/jars/validation-api-1.1.0.Final.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/org.yaml/snakeyaml/bundles/snakeyaml-1.13.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/io.restx/restx-core-annotation-processor/jars/restx-core-annotation-processor-0.34.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/io.restx/restx-security-basic/jars/restx-security-basic-0.34.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/org.mindrot/jbcrypt/jars/jbcrypt-0.3m.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/de.undercouch/bson4jackson/jars/bson4jackson-2.3.1.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/org.mongodb/mongo-java-driver/jars/mongo-java-driver-2.11.3.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/org.jongo/jongo/jars/jongo-1.0.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/io.restx/restx-factory-admin/jars/restx-factory-admin-0.34.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/io.restx/restx-admin/jars/restx-admin-0.34.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/io.restx/restx-webjars/jars/restx-webjars-0.34.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/io.restx/restx-validation/jars/restx-validation-0.34.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/org.hibernate/hibernate-validator/jars/hibernate-validator-5.0.1.Final.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/org.jboss.logging/jboss-logging/jars/jboss-logging-3.1.1.GA.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/com.fasterxml/classmate/bundles/classmate-0.8.0.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/javax.el/el-api/jars/el-api-2.2.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/org.glassfish.web/el-impl/jars/el-impl-2.2.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/io.restx/restx-monitor-codahale/jars/restx-monitor-codahale-0.34.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/io.dropwizard.metrics/metrics-core/bundles/metrics-core-3.1.0.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/org.slf4j/slf4j-api/jars/slf4j-api-1.7.7.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/io.dropwizard.metrics/metrics-healthchecks/bundles/metrics-healthchecks-3.1.0.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/io.dropwizard.metrics/metrics-jvm/bundles/metrics-jvm-3.1.0.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/io.dropwizard.metrics/metrics-graphite/bundles/metrics-graphite-3.1.0.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/io.restx/restx-monitor-admin/jars/restx-monitor-admin-0.34.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/io.restx/restx-log-admin/jars/restx-log-admin-0.34.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/ch.qos.logback/logback-classic/jars/logback-classic-1.0.13.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/ch.qos.logback/logback-core/jars/logback-core-1.0.13.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/io.restx/restx-i18n-admin/jars/restx-i18n-admin-0.34.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/io.restx/restx-i18n/jars/restx-i18n-0.34.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/io.restx/restx-server-jetty/jars/restx-server-jetty-0.34.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/javax.servlet/javax.servlet-api/jars/javax.servlet-api-3.0.1.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/io.restx/restx-servlet/jars/restx-servlet-0.34.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/org.codehaus.janino/janino/jars/janino-2.6.1.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/org.codehaus.janino/commons-compiler/jars/commons-compiler-2.6.1.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/org.eclipse.jetty/jetty-server/jars/jetty-server-8.1.8.v20121106.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/org.eclipse.jetty/jetty-continuation/jars/jetty-continuation-8.1.8.v20121106.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/org.eclipse.jetty/jetty-http/jars/jetty-http-8.1.8.v20121106.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/org.eclipse.jetty/jetty-io/jars/jetty-io-8.1.8.v20121106.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/org.eclipse.jetty/jetty-util/jars/jetty-util-8.1.8.v20121106.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/org.eclipse.jetty/jetty-servlet/jars/jetty-servlet-8.1.8.v20121106.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/org.eclipse.jetty/jetty-security/jars/jetty-security-8.1.8.v20121106.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/org.eclipse.jetty/jetty-webapp/jars/jetty-webapp-8.1.8.v20121106.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/org.eclipse.jetty/jetty-xml/jars/jetty-xml-8.1.8.v20121106.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/org.eclipse.jetty/jetty-servlets/jars/jetty-servlets-8.1.8.v20121106.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/org.eclipse.jetty/jetty-client/jars/jetty-client-8.1.8.v20121106.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/io.restx/restx-apidocs/jars/restx-apidocs-0.34.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/com.fasterxml.jackson.module/jackson-module-jsonSchema/bundles/jackson-module-jsonSchema-2.3.3.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/io.restx/restx-specs-admin/jars/restx-specs-admin-0.34.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/io.restx/restx-specs-tests/jars/restx-specs-tests-0.34.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/junit/junit/jars/junit-4.11.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/org.hamcrest/hamcrest-core/jars/hamcrest-core-1.3.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/org.assertj/assertj-core/bundles/assertj-core-1.6.0.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/com.github.kevinsawicki/http-request/jars/http-request-5.5.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/com.googlecode.java-diff-utils/diffutils/jars/diffutils-1.3.0.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/org.jsoup/jsoup/jars/jsoup-1.7.2.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/org.apache.httpcomponents/httpclient/jars/httpclient-4.5.1.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/org.apache.httpcomponents/httpcore/jars/httpcore-4.4.3.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/commons-logging/commons-logging/jars/commons-logging-1.2.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/commons-codec/commons-codec/jars/commons-codec-1.9.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/com.fasterxml.jackson.core/jackson-core/bundles/jackson-core-2.7.1.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/com.fasterxml.jackson.core/jackson-databind/bundles/jackson-databind-2.7.1-1.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/com.fasterxml.jackson.core/jackson-annotations/bundles/jackson-annotations-2.7.0.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/commons-io/commons-io/jars/commons-io-2.4.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/org.slf4j/slf4j-api/jars/slf4j-api-1.7.5.jar"/>
        <pathelement location="C:/Users/Guillaume/.ivy2/cache/com.fasterxml.jackson.core/jackson-annotations/bundles/jackson-annotations-2.3.3.jar"/>
    </path>
    <path id="EbrithilAPI.classpath">
        <pathelement location="bin"/>
        <path refid="Ivy.libraryclasspath"/>
    </path>
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src/main/java">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src/test/resources">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src/main/resources">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src/test/java">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="target/generated-sources/annotations">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
            <src path="src/main/java"/>
            <src path="src/test/resources"/>
            <src path="src/main/resources"/>
            <src path="src/test/java"/>
            <src path="target/generated-sources/annotations"/>
            <classpath refid="EbrithilAPI.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
    <target name="AppServer">
        <java classname="ebrithilapi.AppServer" failonerror="true" fork="yes">
            <classpath refid="EbrithilAPI.classpath"/>
        </java>
    </target>
    <target name="HelloResourceSpecTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="ebrithilapi.rest.HelloResourceSpecTest" todir="${junit.output.dir}"/>
            <classpath refid="EbrithilAPI.classpath"/>
        </junit>
    </target>
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
	
	<!-- IVY Part -->
	<property file="${basedir}/build.properties"/>
    <property file="${basedir}/build.local.properties"/>

    <path id="antcontrib.path">
        <fileset dir="${antcontrib.dir}"/>
    </path>
    <taskdef resource="net/sf/antcontrib/antlib.xml" uri="antlib:net.sf.antcontrib" classpathref="antcontrib.path"/>


    <!-- ... -->


    <!--===================================================
       Dependency management targets
     =====================================================-->
    <path id="ivy.lib.path">
        <fileset dir="${ivy.lib.dir}" includes="*.jar"/>
    </path>
    <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>

    <!-- Delete dependencies -->
    <target name="clean-deps"
            description="Delete all dependencies, including the directories they were extracted into."
            depends="delete-dep-archive-dir, delete-dep-dirs">
    </target>

    <target name="delete-dep-archive-dir">
        <delete dir="${deparchive.dir}"/>
    </target>

    <target name="delete-dep-dirs" depends="-get-dep-dir-list" if="dep-dir-list">
        <ac:foreach list="${dep-dir-list}" target="delete-dep-dir" param="module" />
    </target>

    <target name="delete-dep-dir">
        <ac:propertycopy name="dep-dir" from="dep.${module}.dir"/>
        <delete dir="${dep-dir}"/>
    </target>

    <target name="clean-dep-cache"
            description="Clear the Ivy cache.">
        <ivy:cleancache />
    </target>

    <!-- Retrieve and extract dependencies -->
    <target name="get-deps" description="Get dependencies from the Ivy repository.">
        <ivy:retrieve pattern="${deparchive.dir}/[artifact]-[revision].[ext]"/>
    </target>

    <!-- Extract a dependency archive into a directory -->
    <target name="extract-dep">
        <ac:propertycopy property="extract-to-dir" from="dep.${dep.artifact}.dir" override="true" silent="true"/>
        <echo message="Extracting ${dep.artifact}..."/>
        <delete dir="${extract-to-dir}"/>
        <ac:if>
            <equals arg1="${dep.type}" arg2="tgz"/>
            <then>
                <untar src="${dep.to}" dest="${extract-to-dir}" compression="gzip"/>
            </then>
            <ac:elseif>
                <equals arg1="${dep.type}" arg2="zip"/>
                <then>
                    <unzip src="${dep.to}" dest="${extract-to-dir}" compression="gzip"/>
                </then>
            </ac:elseif>
            <ac:else>
                <echo msg="I don't know how to extract artifacts of type '${dep.type}'."/>
                <fail/>
            </ac:else>
        </ac:if>
    </target>

    <!-- Publish dependencies -->
    <target name="publish-deps" description="Package up dependencies and publish to Ivy repository."
            depends="-get-dep-dir-list, -get-ivy-ssh-login" if="dep-dir-list">
        <ac:foreach list="${dep-dir-list}" target="publish-dep" param="pub.module" inheritall="true"/>
    </target>

    <!-- Get the list of dependency directories -->
    <target name="-get-dep-dir-list">
        <ac:propertyselector property="dep-dir-list" match="dep\.([^\.]*)\.dir" select="\1" />
    </target>

    <!-- Prompt the user for SSH login credentials for the Ivy repo -->
    <target name="-get-ivy-ssh-login">
        <echo message="Please enter SSH credentials for the Ivy repository."/>
        <input message="Username: " addproperty="repo.ssh.user"/>
        <input message="Password: " addproperty="repo.ssh.pass">
            <handler classname="org.apache.tools.ant.input.SecureInputHandler"/>
        </input>
        <sshexec username="${repo.ssh.user}" password="${repo.ssh.pass}" host="${repo.server}" port="${repo.ssh.port}" command="test 0"/>
    </target>

    <!-- Publish a single dependency archive to the repository. -->
    <target name="publish-dep" depends="package-dep, -check-dep-already-in-repo" if="dep-archive-exists" unless="dep-already-in-repo">
        <echo>Publishing ${pub.module} to the repository...</echo>
        <property name="pub.ivy.file" value="${module.dir}/ivy.xml"/>
        <property name="pub.status" value="release"/>
        <property name="pub.resolver" value="ssh"/>

        <ivy:publish revision="${pub.version}" status="${pub.status}" resolver="${pub.resolver}"
                     module="${pub.module}" organisation="${pub.org}"
                     srcivypattern="${pub.ivy.file}"
                     overwrite="false"
                     update="true"
                >
            <artifacts pattern="${pub.archive.path}"/>
        </ivy:publish>
    </target>

    <!-- Check if the current version of a dependency already exists in the repository. -->
    <target name="-check-dep-already-in-repo" if="dep-archive-exists">
        <ivy:listmodules organisation="${pub.org}" module="${pub.module}" revision="${pub.version}" property="dep-already-in-repo" value="true"/>
        <ac:if>
            <isset property="dep-already-in-repo"/>
            <then>
                <echo>${pub.module} ${pub.version} already exists in the repository.</echo>
                <echo>Skipping publishing of ${pub.module}.</echo>
            </then>
        </ac:if>
    </target>

    <!-- Package up the dependency directory into an archive file -->
    <target name="package-dep" depends="-parse-dep-ivy-file, -check-dep-archive-exists" if="dep-dir-exists" unless="dep-archive-exists">
        <echo>Packaging ${pub.module}...</echo>
        <mkdir dir="${deparchive.dir}"/>
        <tar basedir="${module.dir}" destfile="${pub.archive.path}" compression="gzip"/>
        <property name="dep-archive-exists" value="true"/>
    </target>

    <!-- Parse some properties out of the dependency's ivy.xml file -->
    <target name="-parse-dep-ivy-file" depends="-check-dep-dir-exists" if="dep-dir-exists">
        <exec executable="bash" outputproperty="pub.version" errorproperty="err" resultproperty="result">
            <arg value="-c"/>
            <arg value="grep 'revision=' ${module.dir}/ivy.xml | sed -e 's/.*revision=&quot;\(\S*\)&quot;.*/\1/g'"/>
        </exec>
        <exec executable="bash" outputproperty="pub.org" errorproperty="err" resultproperty="result">
            <arg value="-c"/>
            <arg value="grep 'organisation=' ${module.dir}/ivy.xml | sed -e 's/.*organisation=&quot;\(\S*\)&quot;.*/\1/g'"/>
        </exec>

        <fail message="Unable to determine ${pub.module} revision or organisation. Ensure the 'revision' and 'organisation' attributes are specified in ${module.dir}/ivy.xml.">
            <condition>
                <or>
                    <equals arg1="${pub.version}" arg2=""/>
                    <equals arg1="${pub.org}" arg2=""/>
                </or>
            </condition>
        </fail>
    </target>

    <!-- Check if a dependency directory exists -->
    <target name="-check-dep-dir-exists">
        <ac:propertycopy property="module.dir" from="dep.${pub.module}.dir"/>
        <ac:if>
            <available file="${module.dir}" type="dir"/>
            <then>
                <property name="dep-dir-exists" value="true"/>
            </then>
            <else>
                <echo>${module.dir} specified in build.properties does not exist.</echo>
                <echo>Skipping ${pub.module}.</echo>
            </else>
        </ac:if>
    </target>

    <!-- Check if a dependency archive file already exists in the archive directory -->
    <target name="-check-dep-archive-exists">
        <property name="pub.archive.path" value="${deparchive.dir}/${pub.module}-${pub.version}.tgz"/>
        <ac:if>
            <available file="${pub.archive.path}"/>
            <then>
                <property name="dep-archive-exists" value="true"/>
                <echo>${pub.archive.path} already exists.</echo>
                <echo>Skipping packaging of ${pub.module}.</echo>
                <echo>Delete the archive manually if you want to recreate it.</echo>
            </then>
        </ac:if>
    </target>
</project>
